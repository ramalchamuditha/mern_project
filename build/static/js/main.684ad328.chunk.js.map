{"version":3,"sources":["reducers/index.js","reducers/posts.js","constants/actionTypes.js","api/index.js","actions/posts.js","components/Posts/Post/Style.js","components/Posts/Post/Post.js","components/Posts/Style.js","components/Posts/Posts.js","components/Form/Style.js","components/Form/Form.js","styles.js","App.js","index.js","images/memories.png"],"names":["combineReducers","posts","action","type","filter","post","_id","payload","map","url","updatePost","id","updatedPost","axios","patch","deletePost","delete","likePost","i","makeStyles","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","overlay","top","left","color","overlay2","right","grid","details","margin","title","padding","cardActions","Post","setCurrentId","classes","useStyles","dispatch","useDispatch","Card","className","CardMedia","image","selectedFile","Typography","variant","creator","moment","createdAt","fromNow","Button","style","size","onClick","fontSize","tags","tag","gutterBottom","CardContent","component","message","CardActions","api","data","console","log","likeCount","theme","mainContainer","alignItems","smMargin","spacing","actionDiv","textAlign","Posts","useSelector","state","length","Grid","container","key","item","xs","sm","CircularProgress","root","paper","form","flexWrap","fileInput","width","buttonSubmit","marginBottom","Form","currentId","useState","postData","setPostData","find","p","useEffect","clear","Paper","autoComplete","noValidate","onSubmit","e","preventDefault","newPost","createPost","TextField","name","label","fullWidth","value","onChange","target","split","multiple","onDone","base64","appBar","heading","marginLeft","breakpoints","down","App","get","Container","maxWidth","AppBar","align","src","memories","alt","Grow","in","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.684ad328.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\r\n\r\nimport posts from './posts';\r\n\r\nexport default combineReducers({ posts });","import { FETCH_ALL, CREATE, UPDATE, DELETE } from '../constants/actionTypes';\r\n\r\nexport default (posts = [], action) => {\r\n    switch(action.type){\r\n        case DELETE:\r\n            return posts.filter((post) => post._id !== action.payload);\r\n        case UPDATE:\r\n            return posts.map((post) => post._id === action.payload._id ? action.payload : post );\r\n        case FETCH_ALL:\r\n            return action.payload;\r\n        case CREATE:\r\n            return [...posts, action.payload];\r\n        default:\r\n            return posts;\r\n    }\r\n}","export const CREATE = 'CREATE';\r\nexport const UPDATE = 'UPDATE';\r\nexport const DELETE = 'DELETE';\r\nexport const FETCH_ALL = 'FETCH_ALL';","import axios from 'axios';\r\n\r\nconst url = 'http://localhost:5000/posts';\r\n\r\nexport const fetchPosts = () => axios.get(url);\r\nexport const createPost = (newPost) => axios.post(url, newPost);\r\nexport const updatePost = (id, updatedPost) => axios.patch(`${url}/${id}`, updatedPost);\r\nexport const deletePost = (id) => axios.delete(`${url}/${id}`);\r\nexport const likePost = (id) => axios.patch(`${url}/${id}/likeCount`);","import { FETCH_ALL, CREATE, UPDATE, DELETE } from '../constants/actionTypes';\r\nimport * as api from '../api';\r\n\r\nexport const getPosts = () => async (dispatch) => {\r\n    try{\r\n        const { data } = await api.fetchPosts();\r\n        dispatch({ type: FETCH_ALL, payload: data });\r\n        \r\n    } catch(error){\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n    try{\r\n        const { data } = await api.createPost(post);\r\n        dispatch({ type: CREATE, payload: data });\r\n\r\n    } catch(error){\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updatePost(id, post);\r\n        dispatch({type: UPDATE, payload: data});\r\n\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n    try {\r\n        await api.deletePost(id);\r\n        dispatch({type: DELETE, payload: id});\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.likePost(id);\r\n        dispatch({type: UPDATE, payload: data});\r\n        \r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport default makeStyles({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    backgroundBlendMode: 'darken',\r\n  },\r\n  border: {\r\n    border: 'solid',\r\n  },\r\n  fullHeightCard: {\r\n    height: '100%',\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    borderRadius: '15px',\r\n    height: '100%',\r\n    position: 'relative',\r\n  },\r\n  overlay: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    left: '20px',\r\n    color: 'white',\r\n  },\r\n  overlay2: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    right: '20px',\r\n    color: 'white',\r\n  },\r\n  grid: {\r\n    display: 'flex',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    margin: '20px',\r\n  },\r\n  title: {\r\n    padding: '0 16px',\r\n  },\r\n  cardActions: {\r\n    padding: '0 16px 8px 16px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n});","import React from 'react'\r\nimport useStyles from './Style';\r\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { deletePost, likePost } from '../../../actions/posts';\r\n\r\nconst Post = ({ post, setCurrentId  }) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n  return (\r\n    <Card className={classes.card} >\r\n      <CardMedia className={classes.media} image={post.selectedFile} title={post.title}  />\r\n      <div className={classes.overlay} >\r\n        <Typography variant=\"h6\">{post.creator}</Typography>\r\n        <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\r\n      </div>\r\n      <div className={classes.overlay2} >\r\n        <Button style={{color: \"white\"}} size=\"small\" onClick={() => setCurrentId(post._id) } >\r\n          <MoreHorizIcon fontSize=\"medium\" />\r\n        </Button>\r\n      </div>\r\n      <div className={classes.details} >\r\n        <Typography variant=\"body2\" color=\"textSecondary\">{post.tags.map((tag) => `#${tag} ` )}</Typography>\r\n      </div>\r\n      <Typography className={classes.title} variant=\"h5\" gutterBottom>{post.title}</Typography>\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" >{post.message}</Typography>\r\n      </CardContent>\r\n      <CardActions className={classes.cardActions} >\r\n        <Button size=\"small\" color=\"primary\" onClick={() => dispatch(likePost(post._id)) } ><ThumbUpAltIcon fontSize=\"small\"/> Like {post.likeCount} </Button>\r\n        <Button size=\"small\" color=\"primary\" onClick={() => dispatch(deletePost(post._id)) } ><DeleteIcon fontSize=\"small\"/> Delete </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Post","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport default makeStyles((theme) => ({\r\n  mainContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  actionDiv: {\r\n    textAlign: 'center',\r\n  },\r\n}));","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { Grid, CircularProgress } from '@material-ui/core';\r\nimport Post from './Post/Post';\r\nimport useStyles from './Style';\r\n\r\nconst Posts = ( { setCurrentId } ) => {\r\n    const posts = useSelector((state) => state.posts);\r\n    const classes = useStyles();\r\n\r\n  return (\r\n    !posts.length ? <CircularProgress /> : (\r\n      <Grid className={classes.container} container alignItems=\"stretch\" spacing={3} >\r\n        {posts.map((post) => (\r\n          <Grid key={post._id} item xs={12} sm={6} >\r\n            <Post post={post} setCurrentId = { setCurrentId } />\r\n          </Grid>\r\n        ) )}\r\n      </Grid>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Posts","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  },\r\n  fileInput: {\r\n    width: '97%',\r\n    margin: '10px 0',\r\n  },\r\n  buttonSubmit: {\r\n    marginBottom: 10,\r\n  },\r\n}));","import React, { useState, useEffect }from 'react';\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\r\nimport FileBase from 'react-file-base64';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useStyles from './Style';\r\nimport { createPost, updatePost } from '../../actions/posts';\r\n\r\nconst Form = ({ currentId, setCurrentId }) => {\r\n    const classes = useStyles();\r\n    const [ postData, setPostData ] = useState({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\r\n    const post = useSelector((state) => currentId ? state.posts.find((p) => p._id === currentId) : null);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => { if(post) setPostData(post) }, [post])\r\n    \r\n    const handleSubmit = (e) =>{\r\n      e.preventDefault();\r\n\r\n      if(currentId){\r\n        dispatch(updatePost(currentId, postData));\r\n      } else { \r\n        dispatch(createPost(postData));\r\n      }\r\n      clear();\r\n    };\r\n\r\n    const clear = () => {\r\n      setCurrentId(null);\r\n      setPostData({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\r\n    };\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <form autoComplete='off' noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n        <Typography variant=\"h6\">{currentId ? 'Editing ' : 'Creating '}a Memory</Typography>\r\n        <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={(e) => setPostData({...postData, creator: e.target.value}) } />\r\n        <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({...postData, title: e.target.value}) } />\r\n        <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth value={postData.message} onChange={(e) => setPostData({...postData, message: e.target.value}) } />\r\n        <TextField name=\"tags\" variant=\"outlined\" label=\"Tags\" fullWidth value={postData.tags} onChange={(e) => setPostData({...postData, tags: e.target.value.split(',')}) } />\r\n        <div className={classes.fileInput}>\r\n          <FileBase type=\"file\" multiple={false} onDone={({base64}) => setPostData({...postData, selectedFile: base64})} />\r\n        </div>\r\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" type=\"submit\" size=\"large\" fullWidth >{currentId ? 'Update ' : 'Submit '}</Button>\r\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" fullWidth onClick={clear} >Clear</Button>\r\n      </form>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Form","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport default makeStyles((theme) => ({\r\n    appBar: {\r\n      borderRadius: 15,\r\n      margin: '30px 0',\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      padding: '10px',\r\n    },\r\n    heading: {\r\n      color: 'rgba(0,183,255, 1)',\r\n    },\r\n    image: {\r\n      marginLeft: '15px',\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      mainContainer:{\r\n        flexDirection: 'column-reverse',\r\n      }\r\n    }\r\n    \r\n}));","import React,{ useEffect, useState } from 'react';\r\nimport { Container, AppBar, Grow, Typography, Grid } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { getPosts } from './actions/posts';\r\nimport Posts from './components/Posts/Posts';\r\nimport Form from './components/Form/Form';\r\nimport memories from './images/memories.png';\r\nimport useStyles from './styles';\r\n\r\nconst App = () => {\r\n  const [currentId, setCurrentId] = useState(null);\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getPosts());\r\n  }, [currentId, dispatch]);\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n        <Typography className={classes.heading} variant=\"h2\" align=\"center\">Memories</Typography>\r\n        <img className={classes.image} src={memories} alt=\"icon\" height=\"60\" />\r\n      </AppBar>\r\n      <Grow in>\r\n        <Container>\r\n          <Grid className={classes.mainContainer} container justifyContent=\"space-between\" alignItems=\"stretch\" spacing={3}>\r\n            <Grid item xs={12} sm={7}>\r\n              <Posts setCurrentId = {setCurrentId} />\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <Form currentId = {currentId} setCurrentId = {setCurrentId}/>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Grow>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM  from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport {  createStore, applyMiddleware, compose } from 'redux';\r\nimport  thunk  from 'redux-thunk';\r\n\r\nimport reducers from './reducers';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider> , \r\n    document.getElementById('root')\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/memories.5c0c63fb.png\";"],"sourceRoot":""}